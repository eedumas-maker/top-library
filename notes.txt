notes.txt

TO DO:
- prevent multiple forms when addForm() is used
- make form disappear yet not reload page and wipe library (submit button behavior is weird)

Write a function that loops through the array and displays each book on the page. 
You can display them in some sort of table, or each on their own “card”. 
It might help for now to manually add a few books to your array so you can see the display.

- Done! Kind of, it shows the books when you add them, not when you loop through (because why rewrite the table each time?)
- Much better, got the library to show an hide via functions, even a simple function to refresh the table


Add a “NEW BOOK” button that brings up a form allowing users to input the details for
the new book: author, title, number of pages, whether it’s been read and anything else you might want.

- so i'll need a button, and an event listener for that button, 
- the button makes a whole Form popup, with input fields
- instead of a "submit" button, it just runs the "add row and create object with input's values" function
- utilized this page to help figure out how to move form data to object: https://stackabuse.com/convert-form-data-to-javascript-object/


Add a button on each book’s display to remove the book from the library.

- add a column for the remove button, add the button when you add the book, and associate the button with the book to remove it
- ah, that's why a "redraw table" method would be helpful, because i'll be removing books.

You will need to associate your DOM elements with the actual book objects in some way. 
One easy solution is giving them a data-attribute that corresponds to the index of the library array.

Add a button on each book’s display to change its read status.

To facilitate this you will want to create the function that toggles 
a book’s read status on your Book prototype instance.

this form works great, want to implement like it:

https://github.com/mhjarvis/odin-tic-tac-toe/blob/main/main.js
https://mhjarvis.github.io/odin-tic-tac-toe/



        submitButton.addEventListener('click', function(){
            const title = document.querySelector("#title").value;
            const author = document.querySelector("#author").value;
            const pages = document.querySelector("#pages").value;
            const read = document.querySelector("#read").value;
            const id = mylibrary.length;
            

            const newBook = new book(title, author, pages, read, id);

            this.addBookToLibrary(newBook);
            
            let node = document.getElementById("newForm");

            let garbage = node.parentNode.removeChild(node);

            this.showLibrary();

        });